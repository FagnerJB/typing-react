{"version":3,"sources":["contexts/typing.tsx","components/Wave/Words/Word/index.tsx","utils/words.ts","components/Wave/Words/index.tsx","components/Wave/index.tsx","components/Score/index.tsx","App.tsx","index.tsx"],"names":["TypingContext","createContext","TypingProvider","children","useState","letter","setLetter","wave","setWave","words","setWords","Provider","value","randomBetween","min","max","Math","random","Word","props","word","initial","difficulty","leftN","opp","left","length","animDuration","animDelay","createInitial","useContext","index","setIndex","kill","setKill","style","animationDuration","animationDelay","arrayWord","substr","charAt","useEffect","missed","setTimeout","clearTimeout","className","shuffle","require","source","easy","filter","w","fair","hard","epic","boss","Words","easy_l","setEasy","fair_l","setFair","hard_l","setHard","epic_l","setEpic","boss_l","setBoss","splice","map","key","Wave","difficulties","document","addEventListener","e","preventDefault","test","toLowerCase","Object","values","reduce","p","c","Score","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1bef6714.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\n\ninterface ITypingContext {\n    letter: string\n    wave: number\n    words: number\n    setLetter: (letter: string) => void\n    setWave: (wave: number) => void\n    setWords: (words: number) => void\n}\n\nconst TypingContext = createContext<ITypingContext>({} as ITypingContext)\n\nexport const TypingProvider: React.FC = ({ children }) => {\n\n    const [letter, setLetter] = useState(\"\")\n    const [wave, setWave] = useState(-1)\n    const [words, setWords] = useState(-1)\n\n    return (\n        <TypingContext.Provider value={{ letter, wave, words, setLetter, setWave, setWords }}>\n            {children}\n        </TypingContext.Provider>\n    )\n\n}\n\nexport default TypingContext\n","import React, { useState, useContext, useEffect } from 'react'\n\nimport TypingContext from '../../../../contexts/typing'\n\ninterface IWordProps {\n    word: string\n    difficulty: \"easy\" | \"fair\" | \"hard\" | \"epic\" | \"boss\"\n}\n\nfunction randomBetween(min: number, max: number) {\n    return (Math.random() * max) + min\n}\n\nfunction createInitial(difficulty: \"easy\" | \"fair\" | \"hard\" | \"epic\" | \"boss\", word: string) {\n    const leftN = randomBetween(11, 88)\n    const opp = leftN < 50 ? \"+\" : `-`\n    const left = `calc( ${leftN}% ${opp} ( ${word.length} * ${11.53}px ) )`\n\n    switch (difficulty) {\n        case \"easy\":\n            return {\n                left,\n                animDuration: randomBetween(10, 13),\n                animDelay: randomBetween(0, 1)\n            }\n        case \"fair\":\n            return {\n                left,\n                animDuration: randomBetween(15, 22),\n                animDelay: randomBetween(1, 2)\n            }\n        case \"hard\":\n            return {\n                left,\n                animDuration: randomBetween(20, 25),\n                animDelay: randomBetween(2, 3)\n            }\n        case \"epic\":\n            return {\n                left,\n                animDuration: randomBetween(23, 30),\n                animDelay: randomBetween(4, 5)\n            }\n        case \"boss\":\n            return {\n                left,\n                animDuration: randomBetween(25, 35),\n                animDelay: randomBetween(5, 6)\n            }\n    }\n}\n\nconst Word: React.FC<IWordProps> = (props) => {\n\n    const { word, difficulty } = props\n\n    const initial = createInitial(difficulty, word)\n\n    const { letter, words, setWave, setWords } = useContext(TypingContext)\n\n    const [index, setIndex] = useState(0)\n    const [kill, setKill] = useState(false)\n\n    const [left] = useState(initial.left)\n    const [animDuration] = useState(initial.animDuration + \"s\")\n    const [animDelay] = useState(initial.animDelay + \"s\")\n\n    const style = {\n        left: left,\n        animationDuration: animDuration,\n        animationDelay: animDelay\n    }\n\n    const arrayWord = [\n        word.substr(0, index),\n        word.charAt(index),\n        word.substr(index + 1)\n    ]\n\n    useEffect(() => {\n\n        const missed = setTimeout(() => {\n            setWave(-2)\n        }, (initial.animDuration + initial.animDelay) * 1000)\n\n        if (kill)\n            clearTimeout(missed)\n\n        return () => clearTimeout(missed)\n\n    }, [kill])\n\n    useEffect(() => {\n\n        if (letter === word.charAt(index))\n            setIndex(index + 1)\n\n        // eslint-disable-next-line\n    }, [letter])\n\n    useEffect(() => {\n\n        if (index === word.length) {\n\n            setKill(true)\n            setWords(words - 1)\n        }\n\n        // eslint-disable-next-line\n    }, [index])\n\n    return (\n        <div className={kill ? \"word word-killed\" : \"word\"} style={style}>\n            <span className=\"word-already\">{arrayWord[0]}</span>\n            <span className=\"word-current\">{arrayWord[1]}</span>\n            <span className=\"word-ongoing\">{arrayWord[2]}</span>\n        </div>\n    )\n}\n\nexport default Word\n","import { words } from './words.json'\n\nconst shuffle = require('shuffle-array')\n\nconst source = {\n    easy: shuffle(words.filter((w) => w.length <= 4)),\n    fair: shuffle(words.filter((w) => w.length >= 5 && w.length <= 6)),\n    hard: shuffle(words.filter((w) => w.length >= 7 && w.length <= 8)),\n    epic: shuffle(words.filter((w) => w.length >= 9 && w.length <= 11)),\n    boss: shuffle(words.filter((w) => w.length >= 12))\n}\n\nexport default source\n","import React, { useEffect, useState, useContext } from 'react'\n\nimport TypingContext from '../../../contexts/typing'\n\nimport Word from './Word'\n\nimport source from '../../../utils/words'\n\ninterface IWordsProps {\n    easy: number\n    fair: number\n    hard: number\n    epic: number\n    boss: number\n}\n\nconst Words: React.FC<IWordsProps> = (props) => {\n\n    const { wave } = useContext(TypingContext)\n\n    const { easy, fair, hard, epic, boss } = props\n\n    const [easy_l, setEasy] = useState([])\n    const [fair_l, setFair] = useState([])\n    const [hard_l, setHard] = useState([])\n    const [epic_l, setEpic] = useState([])\n    const [boss_l, setBoss] = useState([])\n\n    useEffect(() => {\n\n        if (wave >= 0) {\n            setEasy(source.easy.splice(0, easy))\n            setFair(source.fair.splice(0, fair))\n            setHard(source.hard.splice(0, hard))\n            setEpic(source.epic.splice(0, epic))\n            setBoss(source.boss.splice(0, boss))\n        }\n\n        // eslint-disable-next-line\n    }, [wave])\n\n    return (\n        <>\n            {easy > 0 ? easy_l.map(\n                (w: string) => <Word key={`easy-${w}`} word={w} difficulty=\"easy\" />\n            ) : \"\"}\n            {fair > 0 ? fair_l.map(\n                (w: string) => <Word key={`fair-${w}`} word={w} difficulty=\"fair\" />\n            ) : \"\"}\n            {hard > 0 ? hard_l.map(\n                (w: string) => <Word key={`hard-${w}`} word={w} difficulty=\"hard\" />\n            ) : \"\"}\n            {epic > 0 ? epic_l.map(\n                (w: string) => <Word key={`epic-${w}`} word={w} difficulty=\"epic\" />\n            ) : \"\"}\n            {boss > 0 ? boss_l.map(\n                (w: string) => <Word key={`boss-${w}`} word={w} difficulty=\"boss\" />\n            ) : \"\"}\n        </>\n    )\n\n}\n\nexport default Words\n","import React, { useContext, useEffect } from 'react'\n\nimport TypingContext from '../../contexts/typing'\n\nimport Words from './Words'\n\nfunction Wave() {\n\n    const { wave, words, setLetter, setWave, setWords } = useContext(TypingContext)\n\n    const difficulties = [{\n        easy: 4, fair: 1\n    }, {\n        easy: 4, fair: 2, hard: 1\n    }, {\n        easy: 5, fair: 3, hard: 2\n    }, {\n        easy: 6, fair: 3, hard: 2, epic: 1\n    }, {\n        easy: 5, fair: 4, hard: 3, epic: 2\n    }, {\n        easy: 4, fair: 5, hard: 4, epic: 2, boss: 1,\n    }, {\n        easy: 3, fair: 5, hard: 5, epic: 3, boss: 1,\n    }, {\n        easy: 2, fair: 6, hard: 5, epic: 3, boss: 1,\n    }, {\n        easy: 2, fair: 6, hard: 5, epic: 4, boss: 2,\n    }, {\n        easy: 1, fair: 5, hard: 6, epic: 5, boss: 2,\n    }, {\n        easy: 1, fair: 5, hard: 6, epic: 5, boss: 3,\n    }]\n\n    document.addEventListener(\"keydown\", (e) => {\n        if (\"Enter\" === e.key && wave === -1) {\n            e.preventDefault()\n            setWave(0)\n        }\n        if (/^[a-zA-Z]$/.test(e.key) && wave >= 0) {\n            e.preventDefault()\n            const letter = e.key.toLowerCase()\n            setLetter(letter)\n        }\n    })\n\n    document.addEventListener(\"keyup\", (e) => {\n        if (/^[a-zA-Z]$/.test(e.key) && wave >= 0) {\n            setLetter(\"\")\n        }\n    })\n\n    useEffect(() => {\n\n        if (wave >= 0)\n            setWords(Object.values(difficulties[wave]).reduce((p: number, c: number | undefined) => c ? p + c : p, 0))\n\n        // eslint-disable-next-line\n    }, [wave])\n\n    useEffect(() => {\n\n        if (words === 0 && wave <= 10)\n            setWave(wave + 1)\n\n        // eslint-disable-next-line\n    }, [words])\n\n    if (wave === -2)\n        return (\n            <div className=\"start lost\">\n                You lost - Press <span className=\"start__key\">F5</span> to try again\n            </div>\n        )\n    else if (wave === -1)\n        return (\n            <div className=\"start\">\n                Press\n                <span className=\"start__key\">Enter</span>\n                to start\n            </div>\n        )\n    else if (wave === 11)\n        return (\n            <div className=\"start won\">\n                You won - Press <span className=\"start__key\">F5</span> to try again\n            </div>\n        )\n    else\n        return (\n            <div className=\"monitor\">\n                <Words\n                    easy={difficulties[wave].easy}\n                    fair={difficulties[wave].fair}\n                    hard={difficulties[wave].hard ?? 0}\n                    epic={difficulties[wave].epic ?? 0}\n                    boss={difficulties[wave].boss ?? 0}\n                />\n            </div>\n        )\n}\n\nexport default Wave\n","import React, { useContext } from 'react'\n\nimport TypingContext from '../../contexts/typing'\n\nfunction Score() {\n\n    const { wave } = useContext(TypingContext)\n\n    return (\n        <div className=\"score\">\n            <ul className=\"score-list\">\n                {wave >= 0 &&\n                    <li className=\"score-list__item\">\n                        <span className=\"score-list__item__head\">Wave</span>\n                        <span className=\"score-list__item__number\">{wave}</span>\n                    </li>\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default Score\n","import React from 'react'\n\nimport { TypingProvider } from './contexts/typing'\n\nimport Wave from \"./components/Wave\"\nimport Score from \"./components/Score\"\n\nimport './assets/global.css'\n\nfunction App() {\n    return (\n        <TypingProvider>\n            <div className=\"container\">\n                <Wave />\n                <Score />\n            </div>\n        </TypingProvider>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}